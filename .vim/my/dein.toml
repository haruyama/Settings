[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'joshdick/onedark.vim'
hook_add = '''
if !has("gui_running")
  set background=dark
  colorscheme onedark
endif
'''

[[plugins]]
repo = 'vim-scripts/AutoTag'

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_add = '''
let g:context_filetype#filetypes = {
      \ 'html': [
      \   {
      \     'start' : '^\s*<script type="application/x-go">',
      \     'end' : '^\s*</script>',
      \     'filetype' : 'go',
      \   },
      \   {
      \     'start' : '^\s*<style>',
      \     'end' : '^\s*</style>',
      \     'filetype' : 'css',
      \   },
      \ ],
      \ 'vue': []
      \}
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
vnoremap <silent> <leader>x :TComment<cr>
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
nmap f <Plug>(easymotion-s)
nmap F <Plug>(easymotion-s)
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_linters = {
\   'c': ['cpplint'],
\   'cpp': ['cpplint'],
\   'javascript': ['eslint'],
\   'typescript': ['eslint'],
\   'go': ['go build', 'go vet'],
\   'html': ['alex', 'htmlhint', 'proselint', 'write-good'],
\   'python': ['flake8', 'pycodestle', 'pyright'],
\   'rust': ['cargo', 'rls'],
\}
nnoremap <silent> <leader>an :ALENextWrap<cr>
nnoremap <silent> <leader>ap :ALEPreviousWrap<cr>
let g:ale_go_bingo_executable = 'gopls'
let g:ale_javascript_eslint_suppress_missing_config = 1
let g:ale_python_mypy_options = '--ignore-missing-imports'
let g:ale_cmake_cmakelint_options = '--filter=-readability/wonkycase,-linelength'
let g:ale_cpp_cpplint_options = '--linelength=120 --filter=-build/include_subdir,-legal/copyright,-build/c++11,-whitespace/braces'
'''
# \   'go': ['go build', 'gosimple', 'go vet', 'staticcheck'],

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {
\    "octave" : {
\       "command" : "octave",
\       "cmdopt"  : "--silent",
\   },
\    "ceylon" : {
\       "command" : "ceylon",
\       "cmdopt"  : "compile",
\   },
\}
'''

[[plugins]]
repo = 'thinca/vim-template'
hook_add = '''
let g:template_vim_template_dir  = $HOME . '/.vim/template'
let g:template_vim_template_dirs = [$HOME . '/.vim/template']
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add = '''
let g:yankring_history_dir            = $HOME . '/.vim/history'
let g:yankring_manual_clipboard_check = 1

nmap p <Plug>(yankround-p)
nmap P <Plug>(yankround-P)
nmap <C-p> <Plug>(yankround-prev)
nmap <C-n> <Plug>(yankround-next)
let g:yankround_max_history = 50
'''

[[plugins]]
repo = 'haya14busa/is.vim'

[[plugins]]
repo = 'guns/vim-sexp'

[[plugins]]
repo = 'tpope/vim-sexp-mappings-for-regular-people'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'rhysd/committia.vim'

[[plugins]]
repo = 'janko-m/vim-test'
hook_add = '''
nmap <silent> <leader>t :TestNearest<CR>
nmap <silent> <leader>f :TestFile<CR>
nmap <silent> <leader>s :TestSuite<CR>
nmap <silent> <leader>l :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>

let g:test#python#pytest#options = {
  \ 'nearest': '-v',
  \ 'file':    '-v',
  \ 'suite':   '-v',
\}
let g:test#go#gotest#options = {
  \ 'nearest': '-v',
  \ 'file':    '-v',
  \ 'suite':   '-v',
\}

let g:test#javascript#jest#executable = 'npx jest'
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'

[[plugins]]
repo = 'osyo-manga/vim-textobj-multitextobj'

[[plugins]]
repo = 'sgur/vim-textobj-parameter'

[[plugins]]
repo = 'farmergreg/vim-lastplace'

[[plugins]]
repo = 'ConradIrwin/vim-bracketed-paste'

[[plugins]]
repo = 'iberianpig/tig-explorer.vim'

[[plugins]]
repo = 'webdevel/tabulous'
hook_add = '''
let g:tabulousLabelNameOptions = ':d:t:r'
let g:tabulousCloseStr = ''
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'nathom/filetype.nvim'
depends = 'impatient.nvim'
if = 'has("nvim")'
hook_add = '''
let g:did_load_filetypes = 1
'''

[[plugins]]
repo = 'lewis6991/impatient.nvim'
if = 'has("nvim")'
hook_source = '''
lua require('impatient')
'''
