[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['context_filetype.vim', 'denops.vim', 'pum.vim']
on_event = 'InsertEnter'
hook_source = '''
call ddc#custom#patch_global(
      \ 'sources', ['around', 'vim-lsp', 'skkeleton']
      \ )
call ddc#custom#patch_global('sourceOptions', {
      \ '_': {
      \   'matchers': ['matcher_head'],
      \   'sorters': ['sorter_rank'],
      \ },
      \ 'around': {'mark': 'A'},
      \ 'eskk': {'mark': 'eskk', 'matchers': [], 'sorters': []},
      \ 'necovim': {'mark': 'vim'},
      \ 'vim-lsp': {
      \   'mark': 'lsp',
      \   'forceCompletionPattern': '\.\w*|:\w*|->\w*'},
      \ 'skkeleton': {
      \   'mark': 'skkeleton',
      \   'matchers': ['skkeleton'],
      \   'sorters': []
      \   },
      \ })
call ddc#custom#patch_filetype(
      \ ['vim', 'toml'], 'sources', ['necovim', 'around']
      \ )

" Use pum.vim
call ddc#custom#patch_global('autoCompleteEvents', [
    \ 'InsertEnter', 'TextChangedI', 'TextChangedP',
    \ 'CmdlineEnter', 'CmdlineChanged',
    \ ])
call ddc#custom#patch_global('completionMenu', 'pum.vim')

inoremap <silent><expr> <TAB>
      \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' :
      \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
      \ '<TAB>' : ddc#manual_complete()
inoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
inoremap <C-n>   <Cmd>call pum#map#select_relative(+1)<CR>
inoremap <C-p>   <Cmd>call pum#map#select_relative(-1)<CR>
inoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
inoremap <C-e>   <Cmd>call pum#map#cancel()<CR>

call ddc#enable()
'''
hook_add = '''
nnoremap :       <Cmd>call CommandlinePre()<CR>:

function! CommandlinePre() abort
  call dein#source('ddc.vim')

  " Note: It disables default command line completion!
  cnoremap <expr> <Tab>
        \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' :
        \ ddc#manual_complete()
  cnoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
  cnoremap <C-n>   <Cmd>call pum#map#select_relative(+1)<CR>
  cnoremap <C-p>   <Cmd>call pum#map#select_relative(-1)<CR>
  cnoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
  cnoremap <C-e>   <Cmd>call pum#map#cancel()<CR>
  set wildchar=<C-t>

  " Overwrite sources
  let s:prev_buffer_config = ddc#custom#get_buffer()
  call ddc#custom#patch_buffer('sources',
        \ ['cmdline', 'cmdline-history', 'around'])
  call ddc#custom#patch_buffer('sourceOptions', {
        \ 'necovim': {
          \   'isVolatile': v:true,
          \   'forceCompletionPattern': '\S/\S*'
          \ },
          \})

  augroup my_pum
    autocmd!
    autocmd CmdlineLeave * ++once call CommandlinePost()
  augroup END

  " Enable command line completion
  call ddc#enable_cmdline_completion()
  call ddc#enable()
endfunction
function! CommandlinePost() abort
  " Restore sources
  call ddc#custom#set_buffer(s:prev_buffer_config)
  cunmap <Tab>
  set wildchar=<Tab>
endfunction
'''

[[plugins]]
repo = 'shun/ddc-vim-lsp'
# on_source = 'vim-lsp-settings'
# depends = 'ddc.vim'
depends = ["vim-lsp"]
on_source = 'ddc.vim'
