[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['context_filetype.vim', 'denops.vim', 'ddc-source-lsp']
on_event = ['InsertEnter', 'CursorHold']
hook_source = '''
" <TAB>: completion.
inoremap <silent><expr> <TAB>
\ pumvisible() ? '<C-n>' :
\ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
\ '<TAB>' : ddc#map#manual_complete()

" <S-TAB>: completion back.
inoremap <expr><S-TAB>  pumvisible() ? '<C-p>' : '<C-h>'
inoremap <silent><expr> <C-l> ddc#map#complete_common_string()

call ddc#custom#patch_global(
      \ 'sources', ['around', 'lsp', 'dictionary']
      \ )
call ddc#custom#patch_global('ui', 'native')
call ddc#custom#patch_global('sourceOptions', {
      \ '_': {
      \   'matchers': ['matcher_head'],
      \   'sorters': ['sorter_rank'],
      \   'converters': ['converter_remove_overlap'],
      \ },
      \ 'around': {
      \   'mark': 'A',
      \   'matchers': ['matcher_head', 'matcher_length'],
      \ },
      \ 'lsp': {
      \   'mark': 'lsp', 
      \   'forceCompletionPattern': '\.\w*|:\w*|->\w*',
      \  },
      \ 'skkeleton': {
      \   'mark': 'skkeleton',
      \   'matchers': ['skkeleton'],
      \   'sorters': [],
      \   'minAutoCompleteLength': 2,
      \   },
      \ })
      " \   'forceCompletionPattern': '\.|:|->'},
call ddc#custom#patch_global('sourceParams', {
      \ 'lsp': #{
      \     snippetEngine: denops#callback#register({
      \           body -> vsnip#anonymous(body) }),
      \     enableResolveItem: v:true,
      \     enableAdditionalTextEdit: v:true,
      \   }
      \ })
call ddc#custom#patch_filetype(
      \ ['vim', 'toml'], 'sources', ['around']
      \ )

call ddc#enable(#{
      \   context_filetype: has('nvim') ? 'treesitter' : 'context_filetype',
      \ })
'''

[[plugins]]
repo = 'Shougo/ddc-source-lsp'
hook_source = '''
lua << EOF
local capabilities = require("ddc_source_lsp").make_client_capabilities()
require("lspconfig").denols.setup({
  capabilities = capabilities,
})
EOF
'''

[[plugins]]
repo = 'liuchengxu/vista.vim'
hook_source = '''
let g:vista_default_executive = 'nvim_lsp'
'''

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
on_source = 'ddc.vim'
hook_source = '''
call popup_preview#enable()
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
on_source = 'ddc-source-vsnip'

[[plugins]]
repo = 'uga-rosa/ddc-source-vsnip'

[[plugins]]
repo = 'rafamadriz/friendly-snippets'
on_source = 'vim-vsnip'
hook_source = '''
let g:vsnip_snippet_dirs = get(g:, 'vsnip_snippet_dirs', []) + globpath(&runtimepath, 'friendly-snippets', 1, 1)
'''
