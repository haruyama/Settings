[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'vim-denops/denops-helloworld.vim'

[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['context_filetype.vim', 'denops.vim']
on_event = 'InsertEnter'
hook_source = '''
inoremap <silent><expr> <C-l> ddc#complete_common_string()
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ ""
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction
call ddc#custom#patch_global(
      \ 'sources', ['around', 'nvimlsp']
      \ )
call ddc#custom#patch_global('sourceOptions', {
      \ '_': {
        \   'matchers': ['matcher_head'],
        \   'sorters': ['sorter_rank'],
        \ },
        \ 'around': {'mark': 'A'},
        \ 'eskk': {'mark': 'eskk', 'matchers': [], 'sorters': []},
        \ 'necovim': {'mark': 'vim'},
        \ 'nvimlsp': {'mark': 'lsp', 'forceCompletionPattern': '\.|:|->'},
        \ })
call ddc#custom#patch_filetype(
      \ ['vim', 'toml'], 'sources', ['necovim', 'around']
      \ )
call ddc#enable()
lua << EOF
vim.lsp.set_log_level("debug")
local lspconfig = require'lspconfig'
lspconfig.clangd.setup{}
lspconfig.denols.setup{}
lspconfig.gopls.setup{}
lspconfig.pyright.setup{}
lspconfig.rls.setup{}
lspconfig.solargraph.setup{}
-- lspconfig.sorbet.setup{}
lspconfig.vuels.setup{}
EOF
'''

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'ddc.vim'

[[plugins]]
repo = 'neovim/nvim-lsp'
hook_add = '''
lua << EOF
local opts = { noremap=true, silent=true }

vim.api.nvim_buf_set_keymap(bufnr, 'n', 'K', '<cmd>lua vim.lsp.buf.hover()<CR>', opts)
vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gd', '<cmd>lua vim.lsp.buf.definition()<CR>', opts)
vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gi', '<cmd>lua vim.lsp.buf.implementation()<CR>', opts)
vim.api.nvim_buf_set_keymap(bufnr, 'n', '[g', '<cmd>lua vim.lsp.diagnostic.goto_prev()<CR>', opts)
vim.api.nvim_buf_set_keymap(bufnr, 'n', ']g', '<cmd>lua vim.lsp.diagnostic.goto_next()<CR>', opts)
vim.api.nvim_buf_set_keymap(bufnr, 'n', '<F2>', '<cmd>lua vim.lsp.buf.rename()<CR>', opts)
EOF
'''


[[plugins]]
repo = 'neovim/nvim-lspconfig'

[[plugins]]
repo = 'liuchengxu/vista.vim'
hook_add = '''
let g:vista_default_executive = 'nvim_lsp'
'''

