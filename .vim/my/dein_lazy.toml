[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['context_filetype.vim']
if = '''has('nvim') || (v:version >= 800 && has('python3'))'''
on_i = 1
hook_source = '''
let g:deoplete#enable_at_startup = 1
source ~/.vim/my/plugins/deoplete.rc.vim
'''

[[plugins]]
repo = 'Shougo/vimshell.vim'
if = "!has('nvim') && !has('terminal')"
on_map = [['n', '<Plug>']]
on_cmd = [ 'VimShell', 'VimShellExecute', 'VimShellInteractive', 'VimShellTerminal', 'VimShellPop']
hook_add = '''
let g:vimfiler_as_default_explorer = 0
let g:vimshell_interactive_update_time = 500
'''

[[plugins]]
repo = 'rhysd/vim-grammarous'
on_cmd = [ 'GrammarousCheck' ]

[[plugins]]
repo = 'tweekmonster/deoplete-clang2'
on_ft = ['c', 'cpp']
hook_source = '''
autocmd FileType c,cpp let b:clang2_orig_maps = {}
'''

[[plugins]]
repo = 'tpope/vim-salve'
on_ft = ['clojure']

[[plugins]]
repo = 'tpope/vim-projectionist'
on_ft = ['clojure']

[[plugins]]
repo = 'tpope/vim-dispatch'
on_ft = ['clojure']

[[plugins]]
repo = 'tpope/vim-fireplace'
on_ft = ['clojure']

[[plugins]]
repo = 'guns/vim-clojure-static'
on_ft = ['clojure']

[[plugins]]
repo = 'guns/vim-clojure-highlight'
on_ft = ['clojure']

# [[plugins]]
# repo = 'venantius/vim-cljfmt'
# on_ft = ['clojure']

[[plugins]]
repo = 'venantius/vim-eastwood'
on_ft = ['clojure']

[[plugins]]
repo = 'kchmck/vim-coffee-script'
on_ft = ['coffee']

[[plugins]]
repo = 'rhysd/vim-crystal'
on_ft = ['crystal']

[[plugins]]
repo = 'aohta/blockdiag.vim',
on_ft = ['diag']

[[plugins]]
repo = 'ElmCast/elm-vim'
on_ft = ['elm']

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_source = '''
let g:go_snippet_engine = 'neosnippet'

let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

let g:go_fmt_command = 'goimports'
'''

[[plugins]]
repo = 'zchee/deoplete-go'
on_i = 1
on_ft = 'go'
build = 'make'
hook_source = '''
let g:deoplete#sources#go#gocode_binary = $GOPATH.'/bin/gocode'
let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
let g:deoplete#sources#go#use_cache = 1
'''

[[plugins]]
repo = 'nbouscal/vim-stylish-haskell'
on_ft = ['haskell']

[[plugins]]
repo = 'b4b4r07/vim-hcl'
on_ft = ['hcl']

[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
on_ft = 'javascript'
do = 'npm install -g tern'

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']

[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = ['javascript']
hook_add = '''
let g:jsx_ext_required = 0
let g:quickrun_config = {
      \ "javascript.jsx": {
      \   "command": "node",
      \   }
      \ }
'''

[[plugins]]
repo = 'ternjs/tern_for_vim'
on_ft = ['javascript']
hook_post_update = '''
  let g:dein#plugin.build = 'npm install'
'''

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']

# [[plugins]]
# repo = 'godlygeek/tabular'

# [[plugins]]
# repo = 'plasticboy/vim-markdown'
# depends = ['tabular']
# on_ft = ['markdown', 'mkd']

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_add = '''
  let g:jedi#use_tabs_not_buffers = 1
  let g:jedi#popup_select_first = 0
  let g:jedi#popup_on_dot = 0
  let g:jedi#goto_command = "<leader>d"
  let g:jedi#goto_assignments_command = "<leader>g"
  let g:jedi#goto_definitions_command = ""
  let g:jedi#documentation_command = "K"
  let g:jedi#usages_command = "<leader>n"
  let g:jedi#rename_command = "<leader>R"
  autocmd! FileType python setlocal completeopt-=preview
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'tpope/gem-ctags'
on_ft = ['ruby']

[[plugins]]
repo = 'tpope/vim-bundler'
on_ft = ['ruby']

[[plugins]]
repo = 'tpope/vim-rake'
on_ft = ['ruby']

[[plugins]]
repo = 'mckinnsb/rust.vim'
on_ft = ['rust']
hook_source = '''
let g:rustfmt_autosave = 1
let g:rustfmt_command = '$HOME/.cargo/bin/rustfmt'
let g:syntastic_rust_checkers = ['cargo']
'''

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = ['rust']
hook_source = '''
set hidden
let g:racer_cmd = '$HOME/.cargo/bin/racer'
'''

[[plugins]]
repo = 'haruyama/scheme.vim'
on_ft = ['scheme']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
repo = 'Quramy/tsuquyomi'
on_ft = ['typescript']

[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']

[[plugins]]
repo = 'mrk21/yaml-vim'
on_ft = ['yaml']
