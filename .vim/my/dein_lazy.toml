# [[plugins]]
# repo = 'Shougo/neosnippet'
# hook_source = '''
# source ~/.vim/my/plugins/neosnippet.vim
# '''
# on_i  = 1
# on_ft = ['snippet']
# depends = ['neosnippet-snippets']
#
[[plugins]]
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'

# [[plugins]]
# repo = 'kana/vim-smartinput'
# on_i = 1

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_source = '''
source ~/.vim/my/plugins/defx.vim
'''
on_cmd = ['Defx']

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
xnoremap <silent> <Leader>a :EasyAlign<cr>
'''
on_cmd = ['EasyAlign']

# [[plugins]]
# repo = 'Shougo/vimshell.vim'
# if = "!has('nvim') && !has('terminal')"
# on_map = [['n', '<Plug>']]
# on_cmd = ['VimShell', 'VimShellExecute', 'VimShellInteractive', 'VimShellTerminal', 'VimShellPop']
# hook_add = '''
# let g:vimfiler_as_default_explorer = 0
# let g:vimshell_interactive_update_time = 500
# '''

[[plugins]]
repo = 'rhysd/vim-grammarous'
on_cmd = [ 'GrammarousCheck' ]

[[plugins]]
repo = 'raghur/vim-ghost'
on_cmd = ['GhostInstall', 'GhostStart']
hook_post_update = '''
:GhostInstall
'''

[[plugins]]
repo = 'ballerina-attic/plugin-vim'
on_ft = ['bal']

[[plugins]]
repo = 'vim-scripts/a.vim'
on_ft = ['c', 'cpp']
hook_add = '''
let g:alternateSearchPath = 'sfr:../source,sfr:../src,sfr:../include,sfr:../inc,wdr:include/shiguredo/mp4,wdr:src'
let g:alternateRelativeFiles = 0
let g:alternateNoDefaultAlternate = 1
'''

[[plugins]]
repo = 'haruyama/vim-gencode-cpp'
on_ft = ['cpp']
depends = ['a.vim']

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c', 'cpp']
hook_add = '''
let g:clang_format#auto_format = 1
'''

[[plugins]]
repo = 'liquidz/vim-iced'
on_ft = ['clojure']
hook_source = '''
let g:iced_enable_default_key_mappings = v:true
'''

[[plugins]]
repo = 'tpope/vim-fireplace'
on_ft = ['clojure']

[[plugins]]
repo = 'kchmck/vim-coffee-script'
on_ft = ['coffee']

[[plugins]]
repo = 'rhysd/vim-crystal'
on_ft = ['crystal']

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css']
hook_add = '''
let g:user_emmet_install_global = 0
autocmd FileType html,css EmmetInstall
'''

[[plugins]]
repo = 'aohta/blockdiag.vim',
on_ft = ['diag']

[[plugins]]
repo = 'ElmCast/elm-vim'
on_ft = ['elm']

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_source = '''
let g:go_snippet_engine = 'neosnippet'

let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

let g:go_def_mapping_enabled = 0
let g:go_doc_keywordprg_enabled = 0

let g:go_fmt_command = 'goimports'
'''

[[plugins]]
repo = 'nbouscal/vim-stylish-haskell'
on_ft = ['haskell']

[[plugins]]
repo = 'b4b4r07/vim-hcl'
on_ft = ['hcl']

[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'yuezk/vim-js'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'
on_ft = ['javascript', 'javascript.jsx', 'javascriptreact', 'tsx', 'typescriptreact']

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_add = '''
let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'zah/nim.vim'
on_ft = 'nim'

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_add = '''
let g:jedi#use_tabs_not_buffers = 1
let g:jedi#popup_select_first = 0
let g:jedi#popup_on_dot = 0
let g:jedi#goto_command = "<leader>d"
let g:jedi#goto_assignments_command = "<leader>g"
let g:jedi#goto_definitions_command = ""
let g:jedi#documentation_command = "K"
let g:jedi#usages_command = "<leader>n"
let g:jedi#rename_command = "<leader>R"
autocmd! FileType python setlocal completeopt-=preview
'''

[[plugins]]
repo = 'python-rope/ropevim'
on_ft = 'python'
hook_add = '''
let ropevim_vim_completion=1
let ropevim_extended_complete=1
let g:ropevim_autoimport_modules = ['os', 'shutil', 'sys', 'time']
'''

[[plugins]]
repo = 'purescript-contrib/purescript-vim'
on_ft = 'purescript'

[[plugins]]
repo = 'tpope/gem-ctags'
on_ft = ['ruby']

[[plugins]]
repo = 'tpope/vim-bundler'
on_ft = ['ruby']

[[plugins]]
repo = 'tpope/vim-rake'
on_ft = ['ruby']

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ['rust']
hook_source = '''
let g:rustfmt_autosave = 1
let g:rustfmt_command = '$HOME/.cargo/bin/rustfmt'
'''

[[plugins]]
repo = 'haruyama/scheme.vim'
on_ft = ['scheme']

[[plugins]]
repo = 'evanleck/vim-svelte'
on_ft = ['svelte']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'
on_ft = ['typescript']

[[plugins]]
repo = 'Quramy/tsuquyomi'
on_ft = ['typescript']

[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']

[[plugins]]
repo = 'mrk21/yaml-vim'
on_ft = ['yaml']

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
if = "has('nvim')"
on_event = 'BufRead'
depends = 'impatient.nvim'
hook_post_update = 'TSUpdate'
hook_source = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
  ensure_installed = 'all',
  highlight = {
    enable = true,
    disable = {},
  },
  -- incremental_selection = {
  --   enable = true,
  --   keymaps = {
  --     init_selection = "gnn",
  --     node_incremental = "grn",
  --     scope_incremental = "grc",
  --     node_decremental = "grm",
  --   },
  -- },
}
EOF

" " Custom colors
" highlight CandyBlue         gui=NONE guibg=#2c2c2c guifg=#1e95fd
" highlight CandyCranberry    gui=NONE guibg=#2c2c2c guifg=#4ae2e2
" highlight CandyEmerald      gui=NONE guibg=#2c2c2c guifg=#44ff44
" highlight CandyGreen        gui=NONE guibg=#2c2c2c guifg=#66ff66
" highlight CandyLime         gui=NONE guibg=#2c2c2c guifg=#4ae2e2
" highlight CandyOrange       gui=NONE guibg=#2c2c2c guifg=#ffb30a
" highlight CandyRed          gui=NONE guibg=#2c2c2c guifg=#ff6666
" highlight CandySky          gui=NONE guibg=#2c2c2c guifg=#6699ff
" highlight CandyViolet       gui=NONE guibg=#2c2c2c guifg=#ff13ff
" highlight CandyWhite        gui=NONE guibg=#2c2c2c guifg=#cccccc
" highlight CandyYellow       gui=NONE guibg=#2c2c2c guifg=#ffd30a
" highlight CandyCoral        gui=NONE guibg=#2c2c2c guifg=#f820ff
" highlight CandyTurquoise    gui=NONE guibg=#2c2c2c guifg=#1bc8c8
" highlight CandyCrimson      gui=NONE guibg=#2c2c2c guifg=#ff4444
"
" " neovim treesitter colors
" highlight! link TSAnnotation      CandyViolet
" highlight! link TSAttribute       CandySky
" highlight! link TSBoolean         Boolean
" highlight! link TSCharacter       Character
" highlight! link TSConditional     CandyCoral
" highlight! link TSConstBuiltin    CandyGreen
" highlight! link TSConstMacro      CandyViolet
" highlight! link TSConstant        Constant
" highlight! link TSConstructor     CandyEmerald
" highlight! link TSError           Error
" highlight! link TSException       Exception
" highlight! link TSField           CandyBlue
" highlight! link TSFloat           Float
" highlight! link TSFuncBuiltin     CandySky
" highlight! link TSFuncMacro       CandySky
" highlight! link TSFunction        CandyCranberry
" highlight! link TSInclude         CandyCranberry
" highlight! link TSKeyword         CandyEmerald
" highlight! link TSKeywordFunction Keyword
" highlight! link TSKeywordOperator CandyViolet
" highlight! link TSLabel           Label
" highlight! link TSLiteral         CandyYellow
" highlight! link TSMethod          CandyTurquoise
" highlight! link TSNamespace       CandyBlue
" highlight! link TSNone            Normal
" highlight! link TSNumber          Number
" highlight! link TSOperator        Operator
" highlight! link TSParameter       CandyWhite
" highlight! link TSParameterReference CandyWhite
" highlight! link TSProperty        Identifier
" highlight! link TSPunctBracket    CandyOrange
" highlight! link TSPunctDelimiter  CandyLime
" highlight! link TSPunctSpecial    Special
" highlight! link TSRepeat          Repeat
" highlight! link TSString          String
" highlight! link TSStringEscape    SpecialChar
" highlight! link TSStringRegex     String
" highlight! link TSTag             CandyBlue
" highlight! link TSTagDelimiter    CandyLime
" highlight! link TSText            TSNone
" highlight! link TSTitle           Title
" highlight! link TSType            Type
" highlight! link TSTypeBuiltin     Type
" highlight! link TSURL             Underlined
" highlight! link TSUnderline       Underlined
" highlight! link TSVariableBuiltin CandyLime
'''

[[plugins]]
repo = 'gelguy/wilder.nvim'
on_map = ':'
hook_source = '''
silent! call wilder#enable_cmdline_enter()
set wildcharm=<Tab>

"      \ 'modes': [':', '/', '?'],
call wilder#setup({
      \ 'modes': [':'],
      \ 'next_key': '<C-n>',
      \ 'previous_key': '<C-p>',
      \ 'accept_key': '<Down>',
      \ 'reject_key': '<Up>',
      \ })

call wilder#set_option('renderer', wilder#popupmenu_renderer({
      \ 'highlighter': wilder#basic_highlighter(),
      \ }))
'''
